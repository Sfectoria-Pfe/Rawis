// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://root:root@lms.zgifrdh.mongodb.net/eLearning"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  nom      String
  prenom   String
  email    String @unique
  password String
  phone    String
  role     Role?

  //Relations 
  score        Score[]
  ReponseQ     ReponseQ[]
  Enseignement Enseignement[]
  ReponseExr   ReponseExr[]
}

enum Role {
  Etudiant
  Enseignant
  Admin
}

model Score {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  score Int

  //clés secondaires 

  Version   Version @relation(fields: [versionId], references: [id])
  versionId String  @db.ObjectId
  User      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
}

model Cours {
  id          String @id @default(uuid()) @map("_id")
  title       String
  description String

  //Relations 
  Chapitre     Chapitre[]
  Enseignement Enseignement[]
  Exercice     Exercice[]
}

model Chapitre {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  title   String
  link    String
  //clés secondaires
  Cours   Cours  @relation(fields: [coursId], references: [id])
  coursId String

  //Relations 
  Version Version[]
}

model Version {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  numberV Int

  //clés secondaires
  Chapitre   Chapitre @relation(fields: [chapitreId], references: [id])
  chapitreId String   @db.ObjectId

  //Relations 
  Quiz  Quiz[]
  Score Score[]
}

model Quiz {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  question  String
  //clés secondaires
  Version   Version @relation(fields: [versionId], references: [id])
  versionId String  @db.ObjectId

  //Relations
  ReponseQ ReponseQ[]
  PropQcm  PropQcm[]
}

model ReponseQ {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  reponse Int

  //clés secondaires
  PropQcm   PropQcm @relation(fields: [propQcmId], references: [id])
  propQcmId String  @db.ObjectId
  User      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  Quiz      Quiz    @relation(fields: [quizId], references: [id])
  quizId    String  @db.ObjectId
}

model PropQcm {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  numP        Int
  proposition String

  //Relations
  ReponseQ ReponseQ[]

  //clés secondaires
  Quiz   Quiz   @relation(fields: [quizId], references: [id])
  quizId String @db.ObjectId
}

model Enseignement {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  User    User   @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  Cours   Cours  @relation(fields: [coursId], references: [id])
  coursId String
}

model ReponseExr {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  User       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  Exercice   Exercice @relation(fields: [exerciceId], references: [id])
  exerciceId String   @db.ObjectId
}

model Exercice {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //Relations
  ReponseExr ReponseExr[]
  Cours      Cours        @relation(fields: [coursId], references: [id])
  coursId    String
}

model Contact {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email       String
  description String
}
