// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  
 id String @id @default(auto()) @map("_id") @db.ObjectId

  nom String
  prenom String
  email String
  password String

  //Relations 
  score        Score[]
  ReponseQ     ReponseQ[]
  Enseignement Enseignement[]
  ReponseExr   ReponseExr[]
}

model Score {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires 
  User      User    @relation(fields: [userId], references: [id])
  userId    String @db.ObjectId
  Version   Version @relation(fields: [versionId], references: [id])
  versionId String @db.ObjectId
}

model Cours {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String 

  //Relations 
  Chapitre     Chapitre[]
  Enseignement Enseignement[]
  Exercice     Exercice[]
}

model Chapitre {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  Cours   Cours @relation(fields: [coursId], references: [id])
  coursId String @db.ObjectId

  //Relations 
  Version Version[]
}

model Version {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  Chapitre   Chapitre @relation(fields: [chapitreId], references: [id])
  chapitreId String @db.ObjectId

  //Relations 
  Quiz  Quiz[]
  Score Score[]
}

model Quiz {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  Version   Version @relation(fields: [versionId], references: [id])
  versionId String @db.ObjectId

  //Relations
  ReponseQ ReponseQ[]
  PropQcm  PropQcm[]
}

model ReponseQ {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  PropQcm   PropQcm @relation(fields: [propQcmId], references: [id])
  propQcmId String @db.ObjectId
  User      User    @relation(fields: [userId], references: [id])
  userId    String @db.ObjectId
  Quiz      Quiz    @relation(fields: [quizId], references: [id])
  quizId    String @db.ObjectId
}

model PropQcm {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //Relations
  ReponseQ ReponseQ[]

  //clés secondaires
  Quiz   Quiz @relation(fields: [quizId], references: [id])
  quizId String @db.ObjectId
}

model Enseignement {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  User    User  @relation(fields: [userId], references: [id])
  userId  String @db.ObjectId
  Cours   Cours @relation(fields: [coursId], references: [id])
  coursId String @db.ObjectId
}

model ReponseExr {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //clés secondaires
  User       User     @relation(fields: [userId], references: [id])
  userId     String @db.ObjectId
  Exercice   Exercice @relation(fields: [exerciceId], references: [id])
  exerciceId String @db.ObjectId
}

model Exercice {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  //Relations
  ReponseExr ReponseExr[]
  Cours      Cours       @relation(fields: [coursId], references: [id])
  coursId    String @db.ObjectId 
}

model Contact {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  email String
  description String
}
